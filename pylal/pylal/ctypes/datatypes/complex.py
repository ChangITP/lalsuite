#!/usr/bin/env python2
# -*- coding: utf-8 -*-
#
#  complex.py
#  
#  Part of the ctypes wrapper library for LAL.
#
#  Copyright 2012 Ben Aylott <beaylott@gmail.com>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#  

from ctypes import Structure
from pylal.ctypes.primitives import REAL8,REAL4

#COMPLEX16 	XLALCOMPLEX16Rect (REAL8 x, REAL8 y)
#COMPLEX16 	XLALCOMPLEX16Polar (REAL8 x, REAL8 y)
#REAL8 	XLALCOMPLEX16Arg (COMPLEX16 z)
#REAL8 	XLALCOMPLEX16Abs (COMPLEX16 z)
#REAL8 	XLALCOMPLEX16Abs2 (COMPLEX16 z)
#REAL8 	XLALCOMPLEX16LogAbs (COMPLEX16 z)
#COMPLEX16 	XLALCOMPLEX16Add (COMPLEX16 a, COMPLEX16 b)
#COMPLEX16 	XLALCOMPLEX16Sub (COMPLEX16 a, COMPLEX16 b)
#COMPLEX16 	XLALCOMPLEX16Mul (COMPLEX16 a, COMPLEX16 b)
#COMPLEX16 	XLALCOMPLEX16Div (COMPLEX16 a, COMPLEX16 b)
#COMPLEX16 	XLALCOMPLEX16AddReal (COMPLEX16 a, REAL8 x)
#COMPLEX16 	XLALCOMPLEX16SubReal (COMPLEX16 a, REAL8 x)
#COMPLEX16 	XLALCOMPLEX16MulReal (COMPLEX16 a, REAL8 x)
#COMPLEX16 	XLALCOMPLEX16DivReal (COMPLEX16 a, REAL8 x)
#COMPLEX16 	XLALCOMPLEX16AddImag (COMPLEX16 a, REAL8 y)
#COMPLEX16 	XLALCOMPLEX16SubImag (COMPLEX16 a, REAL8 y)
#COMPLEX16 	XLALCOMPLEX16MulImag (COMPLEX16 a, REAL8 y)
#COMPLEX16 	XLALCOMPLEX16DivImag (COMPLEX16 a, REAL8 y)
#COMPLEX16 	XLALCOMPLEX16Conjugate (COMPLEX16 z)
#COMPLEX16 	XLALCOMPLEX16Inverse (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Negative (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Sqrt (COMPLEX16 z)
#COMPLEX16 	XLALCOMPLEX16SqrtReal (REAL8 x)
#COMPLEX16 	XLALCOMPLEX16Pow (COMPLEX16 a, COMPLEX16 b)
#COMPLEX16 	XLALCOMPLEX16PowReal (COMPLEX16 a, REAL8 x)
#COMPLEX16 	XLALCOMPLEX16Exp (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Log (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Log10 (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16LogB (COMPLEX16 a, COMPLEX16 b)
#COMPLEX16 	XLALCOMPLEX16Sin (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Cos (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Sec (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Csc (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Tan (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Cot (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Arcsin (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16ArcsinReal (REAL8 x)
#COMPLEX16 	XLALCOMPLEX16Arccos (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16ArccosReal (REAL8 x)
#COMPLEX16 	XLALCOMPLEX16Arcsec (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16ArcsecReal (REAL8 x)
#COMPLEX16 	XLALCOMPLEX16Arccsc (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16ArccscReal (REAL8 x)
#COMPLEX16 	XLALCOMPLEX16Arctan (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Arccot (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Sinh (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Cosh (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Sech (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Csch (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Tanh (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Coth (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Arcsinh (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Arccosh (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16ArccoshReal (REAL8 x)
#COMPLEX16 	XLALCOMPLEX16Arcsech (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Arccsch (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16Arctanh (COMPLEX16 a)
#COMPLEX16 	XLALCOMPLEX16ArctanhReal (REAL8 x)
#COMPLEX16 	XLALCOMPLEX16Arccoth (COMPLEX16 a)

class COMPLEX8(Structure):
    _fields_ = [("re",REAL4),("im",REAL4)]

class COMPLEX16(Structure):
    _fields_ = [("re",REAL8),("im",REAL8)]
